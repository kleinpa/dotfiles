# Windows Subsystem for Linux
if grep -q Microsoft /proc/version; then
    alias emacs='emacsclientw.exe -na runemacs'
    alias open='cmd.exe /c START'
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# To access SSH_AUTH_SOCK from tmux, a layer of indirection is
# required. Incoming SSH sessions should call `ln -sf ${SSH_AUTH_SOCK}
# ~/.ssh/recent_auth` so that the most recent SSH_AUTH_SOCK is always
# accessable at a well known location. This does mean that the link
# may break when you have multiple incoming connections, but simply
# reconnecting will always fix the issue.
#
# ssh -A -t "ln -sf ${SSH_AUTH_SOCK} ~/.ssh/recent_auth && tmux new -A -s main"
#
if [[ -S "$HOME/.ssh/recent_auth" && -n "$TMUX" ]]; then
  export SSH_AUTH_SOCK=$HOME/.ssh/recent_auth
fi

ssht() {
    if [ ! -z "$@" ] ; then
        host=$1
        shift
        rest=$@
        ssh -A -t $host "ln -sf ${SSH_AUTH_SOCK} ~/.ssh/recent_auth && tmux new -As main" $rest
    else
        tmux new -A -s main
    fi

}

if [ -n $(command -v vim) ]; then
    export EDITOR=vim
fi

stty -ixon -ixoff
